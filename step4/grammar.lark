start: statement* plus_atom // first, some statements, then create a value at the end

statement: NAME ":=" plus_atom -> variable_definition
         | NAME "(" [NAME ("," NAME)*] ")" ":=" plus_atom -> function_definition // functions are just like variables, only having some parameters
                                                                                // They are only delayed execution
          // Expressions can not be top-level, since function calls should not have side-effects (except things like random)

!?plus_atom: mul_atom (("+"|"-") mul_atom)*
!?mul_atom: prefix_atom (("*"|"/") prefix_atom)*
!?prefix_atom: ("+"|"-")* power_atom
!?power_atom: atom ("**" prefix_atom)* // FIXME: wrong associativity "2**3**4" is the same as "(2**3)**4" not (as normal) "2**(3**4)"
?atom: "(" plus_atom ")"
     | /[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?/ -> number
     | NAME "(" [plus_atom ("," plus_atom)*] ")" -> function_call
     | NAME -> variable

NAME: /[a-zA-Z_][a-zA-Z_0-9]*/

%ignore /\s/